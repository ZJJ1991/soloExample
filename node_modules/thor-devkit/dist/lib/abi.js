"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ethABI = require('web3-eth-abi');
/** encode/decode parameters of contract function call, event log, according to ABI JSON */
var abi;
(function (abi) {
    /** for contract function */
    class Function {
        /**
         * create a function object
         * @param definition abi definition of the function
         */
        constructor(definition) {
            this.definition = definition;
        }
        /** compute function signature */
        get signature() {
            return ethABI.encodeFunctionSignature(this.definition);
        }
        /**
         * encode input parameters into call data
         * @param args arguments for the function
         */
        encode(...args) {
            return ethABI.encodeFunctionCall(this.definition, args);
        }
        /**
         * decode output data
         * @param outputData output data to decode
         */
        decode(outputData) {
            return ethABI.decodeParameters(this.definition.outputs || [], outputData);
        }
    }
    abi.Function = Function;
    /** for contract event */
    class Event {
        /** for contract event */
        constructor(definition) {
            this.definition = definition;
        }
        /** compute event signature */
        get signature() {
            return ethABI.encodeEventSignature(this.definition);
        }
        /**
         * encode an object of indexed keys into topics.
         * @param indexed an object contains indexed keys
         */
        encode(indexed) {
            const topics = [];
            if (!this.definition.anonymous) {
                topics.push(this.signature);
            }
            for (const input of this.definition.inputs) {
                if (!input.indexed) {
                    continue;
                }
                const value = indexed[input.name];
                if (value) {
                    // TODO: special case for dynamic types
                    topics.push(ethABI.encodeParameter(input.type, value));
                }
                else {
                    topics.push(null);
                }
            }
            return topics;
        }
        /**
         * decode event log
         * @param data data in event output
         * @param topics topics in event
         */
        decode(data, topics) {
            return ethABI.decodeLog(this.definition.inputs, data, this.definition.anonymous ? topics : topics.slice(1));
        }
    }
    abi.Event = Event;
})(abi = exports.abi || (exports.abi = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWJpLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2xpYi9hYmkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxNQUFNLE1BQU0sR0FBRyxPQUFPLENBQUMsY0FBYyxDQUFDLENBQUE7QUFFdEMsMkZBQTJGO0FBQzNGLElBQWlCLEdBQUcsQ0ErR25CO0FBL0dELFdBQWlCLEdBQUc7SUFDaEIsNEJBQTRCO0lBQzVCO1FBQ0k7OztXQUdHO1FBQ0gsWUFBNEIsVUFBK0I7WUFBL0IsZUFBVSxHQUFWLFVBQVUsQ0FBcUI7UUFBSSxDQUFDO1FBRWhFLGlDQUFpQztRQUNqQyxJQUFJLFNBQVM7WUFDVCxPQUFPLE1BQU0sQ0FBQyx1QkFBdUIsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUE7UUFDMUQsQ0FBQztRQUVEOzs7V0FHRztRQUNJLE1BQU0sQ0FBQyxHQUFHLElBQVc7WUFDeEIsT0FBTyxNQUFNLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRSxJQUFJLENBQUMsQ0FBQTtRQUMzRCxDQUFDO1FBRUQ7OztXQUdHO1FBQ0ksTUFBTSxDQUFDLFVBQWtCO1lBQzVCLE9BQU8sTUFBTSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsT0FBTyxJQUFJLEVBQUUsRUFBRSxVQUFVLENBQVcsQ0FBQTtRQUN2RixDQUFDO0tBQ0o7SUEzQlksWUFBUSxXQTJCcEIsQ0FBQTtJQXFCRCx5QkFBeUI7SUFDekI7UUFDSSx5QkFBeUI7UUFDekIsWUFBNEIsVUFBNEI7WUFBNUIsZUFBVSxHQUFWLFVBQVUsQ0FBa0I7UUFBSSxDQUFDO1FBRTdELDhCQUE4QjtRQUM5QixJQUFJLFNBQVM7WUFDVCxPQUFPLE1BQU0sQ0FBQyxvQkFBb0IsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUE7UUFDdkQsQ0FBQztRQUVEOzs7V0FHRztRQUNJLE1BQU0sQ0FBQyxPQUFlO1lBQ3pCLE1BQU0sTUFBTSxHQUF5QixFQUFFLENBQUE7WUFDdkMsSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsU0FBUyxFQUFFO2dCQUM1QixNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQTthQUM5QjtZQUNELEtBQUssTUFBTSxLQUFLLElBQUksSUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNLEVBQUU7Z0JBQ3hDLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxFQUFFO29CQUNoQixTQUFRO2lCQUNYO2dCQUNELE1BQU0sS0FBSyxHQUFJLE9BQWUsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUE7Z0JBQzFDLElBQUksS0FBSyxFQUFFO29CQUNQLHVDQUF1QztvQkFDdkMsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsZUFBZSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQTtpQkFDekQ7cUJBQU07b0JBQ0gsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQTtpQkFDcEI7YUFDSjtZQUNELE9BQU8sTUFBTSxDQUFBO1FBQ2pCLENBQUM7UUFFRDs7OztXQUlHO1FBQ0ksTUFBTSxDQUFDLElBQVksRUFBRSxNQUFnQjtZQUN4QyxPQUFPLE1BQU0sQ0FBQyxTQUFTLENBQ25CLElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxFQUN0QixJQUFJLEVBQ0osSUFBSSxDQUFDLFVBQVUsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBVyxDQUFBO1FBQ3ZFLENBQUM7S0FDSjtJQTVDWSxTQUFLLFFBNENqQixDQUFBO0FBZ0JMLENBQUMsRUEvR2dCLEdBQUcsR0FBSCxXQUFHLEtBQUgsV0FBRyxRQStHbkIifQ==